{"ast":null,"code":"import _objectSpread from \"/Users/aischult/gtcbc/Projects/blackcoffee/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/aischult/gtcbc/Projects/blackcoffee/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/aischult/gtcbc/Projects/blackcoffee/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/aischult/gtcbc/Projects/blackcoffee/client/src/components/Searchbar/Searchbar.js\";\nimport React from \"react\";\nimport deburr from \"lodash/deburr\";\nimport Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popper from \"@material-ui/core/Popper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst suggestions = [{\n  label: \"Afghanistan\"\n}, {\n  label: \"Aland Islands\"\n}, {\n  label: \"Albania\"\n}, {\n  label: \"Algeria\"\n}, {\n  label: \"American Samoa\"\n}, {\n  label: \"Andorra\"\n}, {\n  label: \"Angola\"\n}, {\n  label: \"Anguilla\"\n}, {\n  label: \"Antarctica\"\n}, {\n  label: \"Antigua and Barbuda\"\n}, {\n  label: \"Argentina\"\n}, {\n  label: \"Armenia\"\n}, {\n  label: \"Aruba\"\n}, {\n  label: \"Australia\"\n}, {\n  label: \"Austria\"\n}, {\n  label: \"Azerbaijan\"\n}, {\n  label: \"Bahamas\"\n}, {\n  label: \"Bahrain\"\n}, {\n  label: \"Bangladesh\"\n}, {\n  label: \"Barbados\"\n}, {\n  label: \"Belarus\"\n}, {\n  label: \"Belgium\"\n}, {\n  label: \"Belize\"\n}, {\n  label: \"Benin\"\n}, {\n  label: \"Bermuda\"\n}, {\n  label: \"Bhutan\"\n}, {\n  label: \"Bolivia, Plurinational State of\"\n}, {\n  label: \"Bonaire, Sint Eustatius and Saba\"\n}, {\n  label: \"Bosnia and Herzegovina\"\n}, {\n  label: \"Botswana\"\n}, {\n  label: \"Bouvet Island\"\n}, {\n  label: \"Brazil\"\n}, {\n  label: \"British Indian Ocean Territory\"\n}, {\n  label: \"Brunei Darussalam\"\n}];\n\nfunction renderInputComponent(inputProps) {\n  const classes = inputProps.classes,\n        _inputProps$inputRef = inputProps.inputRef,\n        inputRef = _inputProps$inputRef === void 0 ? () => {} : _inputProps$inputRef,\n        ref = inputProps.ref,\n        other = _objectWithoutProperties(inputProps, [\"classes\", \"inputRef\", \"ref\"]);\n\n  return React.createElement(TextField, Object.assign({\n    fullWidth: true,\n    InputProps: {\n      inputRef: node => {\n        ref(node);\n        inputRef(node);\n      },\n      classes: {\n        input: classes.input\n      }\n    }\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n}\n\nfunction renderSuggestion(suggestion, {\n  query,\n  isHighlighted\n}) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n  return React.createElement(MenuItem, {\n    selected: isHighlighted,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, parts.map(part => React.createElement(\"span\", {\n    key: part.text,\n    style: {\n      fontWeight: part.highlight ? 500 : 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, part.text))));\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n  return inputLength === 0 ? [] : suggestions.filter(suggestion => {\n    const keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1\n  },\n  container: {\n    position: \"relative\"\n  },\n  suggestionsContainerOpen: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  suggestion: {\n    display: \"block\"\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: \"none\"\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n})); // !actual function\n\nexport default function IntegrationAutosuggest() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorEl = _React$useState2[0],\n        setAnchorEl = _React$useState2[1];\n\n  const _React$useState3 = React.useState({\n    single: \"\",\n    popper: \"\"\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        state = _React$useState4[0],\n        setState = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        stateSuggestions = _React$useState6[0],\n        setSuggestions = _React$useState6[1];\n\n  const handleSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const handleChange = name => (event, {\n    newValue\n  }) => {\n    setState(_objectSpread({}, state, {\n      [name]: newValue\n    }));\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion\n  };\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(Autosuggest, Object.assign({}, autosuggestProps, {\n    inputProps: {\n      classes,\n      id: \"react-autosuggest-simple\",\n      label: \"Search\",\n      placeholder: \"Search by name, location, or preferred coffee bean\",\n      value: state.single,\n      onChange: handleChange(\"single\")\n    },\n    theme: {\n      container: classes.container,\n      suggestionsContainerOpen: classes.suggestionsContainerOpen,\n      suggestionsList: classes.suggestionsList,\n      suggestion: classes.suggestion\n    },\n    renderSuggestionsContainer: options => React.createElement(Paper, Object.assign({}, options.containerProps, {\n      square: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), options.children),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), React.createElement(Autosuggest, Object.assign({}, autosuggestProps, {\n    inputProps: {\n      classes,\n      id: \"react-autosuggest-popper\",\n      label: \"Country\",\n      placeholder: \"With Popper\",\n      value: state.popper,\n      onChange: handleChange(\"popper\"),\n      inputRef: node => {\n        setAnchorEl(node);\n      },\n      InputLabelProps: {\n        shrink: true\n      }\n    },\n    theme: {\n      suggestionsList: classes.suggestionsList,\n      suggestion: classes.suggestion\n    },\n    renderSuggestionsContainer: options => React.createElement(Popper, {\n      anchorEl: anchorEl,\n      open: Boolean(options.children),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Paper, Object.assign({\n      square: true\n    }, options.containerProps, {\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : undefined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), options.children)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/aischult/gtcbc/Projects/blackcoffee/client/src/components/Searchbar/Searchbar.js"],"names":["React","deburr","Autosuggest","match","parse","TextField","Paper","MenuItem","Popper","makeStyles","suggestions","label","renderInputComponent","inputProps","classes","inputRef","ref","other","node","input","renderSuggestion","suggestion","query","isHighlighted","matches","parts","map","part","text","fontWeight","highlight","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","getSuggestionValue","useStyles","theme","root","height","flexGrow","container","position","suggestionsContainerOpen","zIndex","marginTop","spacing","left","right","display","suggestionsList","margin","padding","listStyleType","divider","IntegrationAutosuggest","useState","anchorEl","setAnchorEl","single","popper","state","setState","stateSuggestions","setSuggestions","handleSuggestionsFetchRequested","handleSuggestionsClearRequested","handleChange","name","event","newValue","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","id","placeholder","onChange","options","containerProps","children","InputLabelProps","shrink","Boolean","width","clientWidth","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport deburr from \"lodash/deburr\";\nimport Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popper from \"@material-ui/core/Popper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst suggestions = [\n  { label: \"Afghanistan\" },\n  { label: \"Aland Islands\" },\n  { label: \"Albania\" },\n  { label: \"Algeria\" },\n  { label: \"American Samoa\" },\n  { label: \"Andorra\" },\n  { label: \"Angola\" },\n  { label: \"Anguilla\" },\n  { label: \"Antarctica\" },\n  { label: \"Antigua and Barbuda\" },\n  { label: \"Argentina\" },\n  { label: \"Armenia\" },\n  { label: \"Aruba\" },\n  { label: \"Australia\" },\n  { label: \"Austria\" },\n  { label: \"Azerbaijan\" },\n  { label: \"Bahamas\" },\n  { label: \"Bahrain\" },\n  { label: \"Bangladesh\" },\n  { label: \"Barbados\" },\n  { label: \"Belarus\" },\n  { label: \"Belgium\" },\n  { label: \"Belize\" },\n  { label: \"Benin\" },\n  { label: \"Bermuda\" },\n  { label: \"Bhutan\" },\n  { label: \"Bolivia, Plurinational State of\" },\n  { label: \"Bonaire, Sint Eustatius and Saba\" },\n  { label: \"Bosnia and Herzegovina\" },\n  { label: \"Botswana\" },\n  { label: \"Bouvet Island\" },\n  { label: \"Brazil\" },\n  { label: \"British Indian Ocean Territory\" },\n  { label: \"Brunei Darussalam\" }\n];\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input\n        }\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map(part => (\n          <span\n            key={part.text}\n            style={{ fontWeight: part.highlight ? 500 : 400 }}\n          >\n            {part.text}\n          </span>\n        ))}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 &&\n          suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1\n  },\n  container: {\n    position: \"relative\"\n  },\n  suggestionsContainerOpen: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  suggestion: {\n    display: \"block\"\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: \"none\"\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\n\n// !actual function\nexport default function IntegrationAutosuggest() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [state, setState] = React.useState({\n    single: \"\",\n    popper: \"\"\n  });\n\n  const [stateSuggestions, setSuggestions] = React.useState([]);\n\n  const handleSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const handleChange = name => (event, { newValue }) => {\n    setState({\n      ...state,\n      [name]: newValue\n    });\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion\n  };\n\n  return (\n    <div className={classes.root}>\n      <Autosuggest\n        {...autosuggestProps}\n        inputProps={{\n          classes,\n          id: \"react-autosuggest-simple\",\n          label: \"Search\",\n          placeholder: \"Search by name, location, or preferred coffee bean\",\n          value: state.single,\n          onChange: handleChange(\"single\")\n        }}\n        theme={{\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        }}\n        renderSuggestionsContainer={options => (\n          <Paper {...options.containerProps} square>\n            {options.children}\n          </Paper>\n        )}\n      />\n      <div className={classes.divider} />\n      <Autosuggest\n        {...autosuggestProps}\n        inputProps={{\n          classes,\n          id: \"react-autosuggest-popper\",\n          label: \"Country\",\n          placeholder: \"With Popper\",\n          value: state.popper,\n          onChange: handleChange(\"popper\"),\n          inputRef: node => {\n            setAnchorEl(node);\n          },\n          InputLabelProps: {\n            shrink: true\n          }\n        }}\n        theme={{\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        }}\n        renderSuggestionsContainer={options => (\n          <Popper anchorEl={anchorEl} open={Boolean(options.children)}>\n            <Paper\n              square\n              {...options.containerProps}\n              style={{ width: anchorEl ? anchorEl.clientWidth : undefined }}\n            >\n              {options.children}\n            </Paper>\n          </Popper>\n        )}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}